'''
将锡特卡和死亡谷的同年最高气温和最低气温绘制在同一张图
generated by Bing chat
'''
import csv
import matplotlib.pyplot as plt
from datetime import datetime
import numpy as np

# 从csv数据中提取最高气温和最低气温
filename1 = 'sitka_weather_2018_full.csv'
with open(filename1) as f:
    reader = csv.reader(f)
    head_row = next(reader)
    dates1, highs1, lows1 = [], [], []
    for row in reader:
        try:
            current_date = datetime.strptime(row[2], "%Y-%m-%d")
            high = int(row[8])  # 转换为整数
            low = int(row[9])  # 转换为整数
        except ValueError:
            print(current_date, "missing value")
        else:
            dates1.append(current_date)
            highs1.append(high)
            lows1.append(low)

# 分析death_valley的天气数据(最高温、最低温)
filename2 = 'death_valley_2018_full.csv'
with open(filename2) as f:
    reader = csv.reader(f)
    head_row = next(reader)
    dates2, highs2, lows2 = [], [], []
    for row in reader:
        try:
            current_date = datetime.strptime(row[2],'%Y-%m-%d')
            high = int(row[6])
            low = int(row[7])
        except ValueError:
            print("missing value")
        else:
            dates2.append(current_date)
            highs2.append(high)
            lows2.append(low)

# 绘制图形
plt.figure(dpi=128, figsize=(10, 6))
plt.plot(dates1, highs1, linewidth=0.5, color='red', alpha=0.5)
plt.plot(dates1, lows1, linewidth=0.5, color='blue', alpha=0.5)
plt.fill_between(dates1, highs1, lows1, facecolor='blue', alpha=0.1)

plt.plot(dates2, highs2, linewidth=0.5, color='orange', alpha=0.5)
plt.plot(dates2, lows2, linewidth=0.5, color='green', alpha=0.5)
plt.fill_between(dates2, highs2, lows2, facecolor='green', alpha=0.1)

# 设置图形格式
plt.title("Daily temperatures comparison, 2018", fontsize=24)
plt.xlabel('Date', fontsize=10)
plt.ylabel("Temperature(f)", fontsize=16)
plt.tick_params(axis='both', which='major', labelsize=8)
plt.xticks(rotation=45)  # 绘制斜的日期标签

# 设置纵坐标的刻度间隔为10
plt.yticks(np.arange(min(min(lows1), min(lows2)), max(max(highs1), max(highs2))+10, 10))

# 调整图形布局
plt.subplots_adjust(bottom=0.15)
plt.subplots_adjust(left=0.15)

plt.show()
